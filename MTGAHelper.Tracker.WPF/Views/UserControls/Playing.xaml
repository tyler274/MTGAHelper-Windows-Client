<UserControl x:Class="MTGAHelper.Tracker.WPF.Views.UserControls.Playing"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:MTGAHelper.Tracker.WPF.Views"
        xmlns:helpers="clr-namespace:MTGAHelper.Tracker.WPF.Views.Helpers"
        xmlns:uc="clr-namespace:MTGAHelper.Tracker.WPF.Views.UserControls"
        mc:Ignorable="d" 
        d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <helpers:BoolToStringConverter x:Key="HasPriorityConverter" TrueValue="Bold" FalseValue="Regular" />
    </UserControl.Resources>
    <UserControl.Style>
        <Style TargetType="{x:Type uc:Playing}">
            <Setter Property="Visibility" Value="Hidden" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding MainWindowContext}" Value="Playing">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <!--<Label Grid.Row="0"  FontSize="20" FontWeight="Bold" Padding="5,0,5,0">
            <TextBlock>Match in progress</TextBlock>
        </Label>-->
        
        <TabControl Grid.Row="0" TabStripPlacement="Left" Background="Transparent" BorderThickness="0">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="TabControl_PreviewMouseLeftButtonDown"/>
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentPresenter>
                                    <ContentPresenter.LayoutTransform>
                                        <RotateTransform Angle="270" />
                                    </ContentPresenter.LayoutTransform>
                                    <ContentPresenter.Content>
                                        <TextBlock Text="{Binding}" Foreground="#f26d21" />
                                    </ContentPresenter.Content>
                                    <!--<ContentPresenter.Style>
                                        <Style TargetType="ContentPresenter">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True">
                                                    <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="False">
                                                    <Setter Property="TextBlock.Foreground" Value="White"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentPresenter.Style>-->
                                </ContentPresenter>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="1 10" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </TabControl.Resources>
            <TabItem Header="Library">
                <TabItem.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" FontSize="16" FontWeight="Bold">
                            <TextBlock TextWrapping="WrapWithOverflow" Text="{Binding InMatchState.LibraryCardsCount, StringFormat={}{0} cards in Library}" />
                        </Label>
                        <!--<CheckBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" IsChecked="{Binding InMatchState.SplitLands.Value}" Checked="CheckBoxSplitLands_Checked">
                                Split lands by type
                            </CheckBox>-->
                        <StackPanel Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Background="#0b0d0e">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/Assets/Images/land.png" Width="28" Margin="5,0,0,0" />
                                <Border Padding="5,0,5,0">
                                    <StackPanel>
                                        <Label Padding="2" HorizontalAlignment="Center">
                                            <TextBlock Text="{Binding InMatchState.LibraryLandCurrentAndTotal}" FontWeight="Bold" Foreground="White" />
                                        </Label>
                                        <Label Padding="2" HorizontalAlignment="Center">
                                            <TextBlock Text="{Binding InMatchState.LibraryDrawLandPct, StringFormat=p1}" />
                                        </Label>
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                        </StackPanel>
                        
                        <uc:SimpleCardsList Grid.Row="1" Grid.ColumnSpan="2" x:Name="CardsMyLibrary" DataContext="{Binding InMatchState.MyLibrary}" />
                    </Grid>
                </TabItem.Content>
            </TabItem>
            <TabItem Header="Sideboard">
                <TabItem.Content>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" FontSize="16" FontWeight="Bold">
                            <TextBlock TextWrapping="WrapWithOverflow" Text="{Binding InMatchState.SideboardCardsCount, StringFormat={}{0} cards in Sideboard}" />
                        </Label>
                        <uc:SimpleCardsList Grid.Row="1" x:Name="CardsMySideboard" DataContext="{Binding InMatchState.MySideboard}" />
                    </Grid>
                </TabItem.Content>
            </TabItem>

            <TabItem Header="Opponent cards">
                <TabItem.Content>
                    <Label Content="N/A"></Label>
                    <!--<Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" FontSize="16" FontWeight="Bold">
                            <TextBlock>Opponent cards seen</TextBlock>
                        </Label>
                        <uc:SimpleCardsList Grid.Row="1" x:Name="CardsOpponent" DataContext="{Binding InMatchState.OpponentCardsSeen}" />
                    </Grid>-->
                </TabItem.Content>
            </TabItem>

            <!--<TabItem Header="Stats">
                <TabItem.Content>
                    <Label FontSize="16" FontWeight="Bold">
                        <TextBlock>Stats</TextBlock>
                    </Label>
                </TabItem.Content>
            </TabItem>

            <TabItem Header="Full deck">
                <TabItem.Content>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" FontSize="16" FontWeight="Bold">
                            <TextBlock>Full deck with sideboard</TextBlock>
                        </Label>
                        <uc:SimpleCardsList Grid.Row="1" x:Name="FullDeck" DataContext="{Binding InMatchState.FullDeck}" />
                    </Grid>
                </TabItem.Content>
            </TabItem>-->
        </TabControl>

        <Grid Grid.Row="1" Width="Auto" HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Grid.Row="0" Grid.Column="0" FontSize="14" FontWeight="Bold" Margin="0" Padding="0,0,0,2">
                <TextBlock Text="Priority" />
            </Label>
            <Label Grid.Row="0" Grid.Column="1" Margin="0" Padding="10,0,0,2" VerticalAlignment="Bottom"
                FontWeight="{Binding InMatchState.TimerMe.HasPriority, Converter={StaticResource HasPriorityConverter}}">
                <TextBlock Text="{Binding InMatchState.TimerMe.TimePlayed, StringFormat=You: {0}}" />
            </Label>
            <Label Grid.Row="0" Grid.Column="2" Margin="0" Padding="10,0,0,2" VerticalAlignment="Bottom"
                FontWeight="{Binding InMatchState.TimerOpponent.HasPriority, Converter={StaticResource HasPriorityConverter}}">
                <TextBlock Text="{Binding InMatchState.TimerOpponent.TimePlayed, StringFormat=Opponent: {0}}" />
            </Label>
        </Grid>
    </Grid>
</UserControl>
